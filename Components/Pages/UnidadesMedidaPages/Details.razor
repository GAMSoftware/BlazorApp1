@page "/unidadesmedida/details"
@inject BlazorApp1.Data.BlazorApp1Context DB
@using BlazorApp1.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>UnidadesMedida</h4>
    <hr />
    @if (unidadesmedida is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@unidadesmedida.Descricao</dd>
            <dt class="col-sm-2">Casas_Decimais</dt>
            <dd class="col-sm-10">@unidadesmedida.Casas_Decimais</dd>
            <dt class="col-sm-2">Ativa</dt>
            <dd class="col-sm-10">@unidadesmedida.Ativa</dd>
            <dt class="col-sm-2">Cadastrado_Usuario</dt>
            <dd class="col-sm-10">@unidadesmedida.Cadastrado_Usuario</dd>
            <dt class="col-sm-2">Cadastrado_Data</dt>
            <dd class="col-sm-10">@unidadesmedida.Cadastrado_Data</dd>
            <dt class="col-sm-2">Alterado_Usuario</dt>
            <dd class="col-sm-10">@unidadesmedida.Alterado_Usuario</dd>
            <dt class="col-sm-2">Alterado_Data</dt>
            <dd class="col-sm-10">@unidadesmedida.Alterado_Data</dd>
        </dl>
        <div>
            <a href="@($"/unidadesmedida/edit?sigla={unidadesmedida.Sigla}")">Edit</a> |
            <a href="@($"/unidadesmedida")">Back to List</a>
        </div>
    }
</div>

@code {
    UnidadesMedida? unidadesmedida;

    [SupplyParameterFromQuery]
    public string Sigla { get; set; }

    protected override async Task OnInitializedAsync()
    {
        unidadesmedida = await DB.UnidadesMedida.FirstOrDefaultAsync(m => m.Sigla == Sigla);

        if (unidadesmedida is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
